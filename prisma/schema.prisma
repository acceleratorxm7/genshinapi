generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CharacterInfo {
  id                 Int                  @id @default(autoincrement())
  element_key        String
  element            Element              @relation(fields: [element_key], references: [key])
  gender_key         String
  gender             Gender               @relation(fields: [gender_key], references: [key])
  level              Int
  location_key       String
  location           Location             @relation(fields: [location_key], references: [key])
  weapon_key         String
  weapon             WeaponType           @relation(fields: [weapon_key], references: [key])
  name               String
  icon               String
  quotes             String
  affiliation        String
  star               String
  pvurl              String?
  expurl             String?
  playurl            String?
  CharacterAscension CharacterAscension[]
}

model CharacterAscension {
  character_key Int
  order         Int
  item_key      Int
  item_amount   Int
  ItemInfo      ItemInfo      @relation(fields: [item_key], references: [id])
  CharacterInfo CharacterInfo @relation(fields: [character_key], references: [id])

  @@id([character_key, order])
}

model Element {
  key           String          @id
  text          String
  emoji         String
  url           String
  CharacterInfo CharacterInfo[]
}

model ItemInfo {
  id              Int              @id @default(autoincrement())
  name            String
  level           Int
  description     String?
  image           String?
  buff_override   String?
  organization_id Int
  organization    ItemOrganization @relation(fields: [organization_id], references: [id])

  CharacterAscension CharacterAscension[]
  @@index([name])
}

model ItemOrganization {
  id           Int           @id @default(autoincrement())
  category_key String
  class_key    String
  subclass_key String?
  icon_key     Int?
  category     ItemCategory  @relation(fields: [category_key], references: [key])
  class        ItemClass     @relation(fields: [class_key], references: [key])
  subclass     ItemSubclass? @relation(fields: [subclass_key], references: [key])
  icon         ItemIcon?     @relation(fields: [icon_key], references: [id])
  ItemInfo     ItemInfo[]
}

model ItemCategory {
  key              String             @id
  text             String
  ItemOrganization ItemOrganization[]
}

model ItemClass {
  key              String             @id
  text             String
  ItemOrganization ItemOrganization[]
}

model ItemSubclass {
  key              String             @id
  text             String
  ItemOrganization ItemOrganization[]
}

model ItemIcon {
  id           Int                @id @default(autoincrement())
  identifier   String?
  emoji        String
  url          String
  ItemSubclass ItemOrganization[]
}

model Gender {
  key           String          @id 
  text          String
  CharacterInfo CharacterInfo[]
}

model SkillType {
  key  String @id @unique
  text String
}

model WeaponType {
  key           String          @id 
  text          String
  emoji         String 
  url           String
  CharacterInfo CharacterInfo[]
}

model Location {
  key           String          @id 
  text          String
  CharacterInfo CharacterInfo[]
}
